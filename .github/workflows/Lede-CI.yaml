name: Build lede

on:
  # repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH Action'
        required: false
        default: 'false'
  schedule:
    - cron: 30 4 * * 1,5

env: 
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: X86_64.config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs: 
  build:
    runs-on: ubuntu-20.04

    steps:

    - name: Checkout
      uses: actions/checkout@main
      with:
        ref: master
        fetch-depth: 0

    - name: 创建环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /OpenWrt
        sudo chown $USER:$GROUPS /OpenWrt

    - name: 下载Lede源码
      working-directory: /OpenWrt
      run: |
        git clone https://github.com/coolsnowwolf/lede.git -b master lede
        ln -sf /OpenWrt/lede $GITHUB_WORKSPACE/lede

    - name: 缓存配置
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: false
          #是否缓存工具链目录
        prefix: ${{ github.workspace }}/lede
          #是否一并缓存.ccache目录，如果你启用了ccache。这是唯一的常用参数，其他三个用于除错，一般不需要调整
        toolchain: true
          #是否跳过工具链编译
        skip: true
          #清空缓存
        clean: false

    - name: 加载本地文件
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF lede/feeds.conf.default
        cd ${{ github.workspace }}/lede
        # echo 'src-git kenzo https://github.com/kenzok8/openwrt-packages' >>feeds.conf.default
        # echo 'src-git small https://github.com/kenzok8/small' >>feeds.conf.default

    - name: 更新插件库
      run: cd ${{ github.workspace }}/lede && ./scripts/feeds update -f -a

    - name: 安装插件库
      run: cd ${{ github.workspace }}/lede && ./scripts/feeds install -f -a
        
    - name: 覆盖写入配置文件
      run: |
        make defconfig
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
        cd ${{ github.workspace }}/lede
        sed -i 's/OpenWrt/Jayha/g' package/base-files/files/bin/config_generate

    - name: 编译插件库
      id: package
      run: |
        cd ${{ github.workspace }}/lede
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        make download -j8 V=s

    - name: 完成固件
      run: |
        cd ${{ github.workspace }}/lede
        make -j$(nproc) || make -j1 V=s

    - name: Prepare artifact
      run: |
        cd ${{ github.workspace }}/lede
        mkdir -p ${{ github.workspace }}/lede/artifact/firmware 
        mkdir -p ${{ github.workspace }}/lede/artifact/packages
        cp -rf $(find ${{ github.workspace }}/lede/bin/targets/* -type f) ./artifact/firmware/
        cp -rf $(find ${{ github.workspace }}/lede/bin/packages/* -type f -name "*.ipk") ./artifact/packages/

    - name: 上传固件
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path: ${{ github.workspace }}/lede/artifact/firmware

    - name: 上传插件
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path: ${{ github.workspace }}/lede/artifact/packages
